---

# Include external role related vars
- name: Include (default) vars for other roles
  include_vars: external_vars.yml

# Custom Repos
- name: Add custom repos
  apt_repository:
    repo: "{{ item }}"
  with_items: "{{ php_app_custom_repos }}"

# User setup
- name: Create application user
  user:
    name: "{{ php_app_user }}"
    groups:
      - www-data
    state: present
    shell: /bin/bash
    system: no
    createhome: yes
    home: "/home/{{ php_app_user }}/"
    generate_ssh_key: yes

- name: "Add www-data to {{ php_app_user }} group"
  user:
    name: www-data
    groups: "{{ php_app_user }}"
    append: yes

#  Allow application user to reload php-fpm
- name: Allow application user to reload php-fpm
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: "{{ item }}"
    line: "{{ item }}"
    validate: visudo -cf %s
  with_items: "{{ php_app_sudo_rules }}"



# Create directories
- name: Create application directories
  file:
    path: "/home/{{ php_app_user }}/{{ item.key }}"
    state: directory
    owner: "{{ php_app_user }}"
    group: "{{ php_app_user }}"
    mode: 0775
  with_dict: "{{ nginx_sites }}"


# Example read-write git checkout from github
- name: pull a example php project from github
  git:
    repo: https://github.com/laravel/lumen
    dest: /home/{{ php_app_user }}/{{ app_server_name }}/current
    force: yes

- name: replace this file with defautl routing php file
  template:
    src: web.php.j2
    dest: /home/{{ php_app_user }}/{{ app_server_name }}/current/routes/web.php 

- name: replace this host file with defautl one
  template:
    src: hosts.j2
    dest: /etc/hosts

# Setup locales
- name: Ensure a locale exists
  locale_gen:
    name: en_US.UTF-8
    state: present

# Install Nginx
- name: Install Nginx
  include_role:
    name: jdauphant.nginx

# Install PHP
- name: Install PHP
  include_role:
    name: geerlingguy.php

# Apply extra fpm pool params
- name: Apply extra fpm pool params
  lineinfile:
    dest: "{{ php_fpm_pool_conf_path }}"
    state: present
    line: "{{ item.param }} = {{ item.value }}"
    regexp: "^{{ item.param | regex_escape() }}"
    insertafter: "^;{{ item.param | regex_escape() }}"
    validate: "/usr/sbin/php-fpm{{ php_version }} -t -y %s"
  with_items: "{{ php_app_fpm_pool_params }}"

# Apply extra php ini params
- name: Apply extra php ini params
  lineinfile:
    dest: "{{ item[1] }}/php.ini"
    state: present
    line: "{{ item[0].param }} = {{ item[0].value }}"
    regexp: "^{{ item[0].param | regex_escape() }}"
    insertafter: "^;{{ item[0].param | regex_escape() }}|\\[PHP\\]"
    validate: "/usr/bin/php{{ php_version }} -i -c %s"
  with_nested:
    - "{{ php_app_ini_params }}"
    - "{{ php_conf_paths }}"

# Install composer
- name: Install composer
  include_role:
    name: geerlingguy.composer

# Install composer
- name: run Composer install(It takes a few minutes)
  composer:
    command: install
    working_dir: /home/{{ php_app_user }}/{{ app_server_name }}/current

# check url is healthy
- name: Check that the URL to make sure it returns a status 200
  uri:
    url: http://{{ app_server_name }}
    method: GET

- name: Allow incoming access to eth0 from 172.20.0.24 port 80 to {{ ansible_all_ipv4_addresses[1] }} port 80
  ufw:
    rule: allow
    direction: in
    proto: tcp
    src: '{{ haproxy_ip }}'
    dest: '{{ ansible_all_ipv4_addresses[1] }}'
    to_port: '80'

- name: Allow all access to tcp port 22
  ufw:
    state: enabled
    rule: allow
    port: '22'
    proto: tcp

